<ccl:CustomChromeWindow 
    x:Class="UrbanRivalsManager.View.CombatCalculatorCombatModeView"
    x:Name="Window"
    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"

    xmlns:ccl="clr-namespace:CustomChromeLibrary;assembly=CustomChromeLibrary"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"

    xmlns:resx="clr-namespace:UrbanRivalsManager.Properties"
    xmlns:usercontrol="clr-namespace:UrbanRivalsManager.UserControls"
    xmlns:sample="clr-namespace:UrbanRivalsManager.SampleData"
    
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    
    mc:Ignorable="d" 
    d:DesignHeight="800" d:DesignWidth="1500"
    
    Title="UR Calculator" 
    ResizeMode="CanResize" 
    AllowsTransparency="True"
    Background="Transparent"
    WindowStyle="None"
    Icon="/Resources/Misc/pillz_vertical.png"
    Topmost="{Binding StayOnTop, ElementName=Window}"
    
    MouseLeftButtonDown="Window_MouseLeftButtonDown"
    Closing="Window_Closing"
    Loaded="Window_Loaded"
    >
    
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome
            ResizeBorderThickness="6"
            CaptionHeight="0"
            GlassFrameThickness="0"
            CornerRadius="0">
        </shell:WindowChrome>
    </shell:WindowChrome.WindowChrome>

    <Window.Resources>
        <Style TargetType="ccl:CaptionButtons">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>
        <Style x:Key="GlobalBackground" TargetType="Rectangle">
            <Setter Property="Fill" Value="#af550000" />
        </Style>
        <Style x:Key="GridSplitter" TargetType="GridSplitter">
            <Setter Property="Height" Value="Auto" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Background" Value="#01000000" />
        </Style>
        <Style x:Key="WindowBorder" TargetType="Border">
            <Setter Property="BorderBrush" Value="Silver" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
        <Style x:Key="HoleBorder" TargetType="Border" BasedOn="{StaticResource WindowBorder}">
            <Setter Property="BorderThickness" Value="8" />
        </Style>
        <GridLength x:Key="GridSplitterSize">8</GridLength>

        <Style TargetType="FrameworkElement">
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style TargetType="Label" BasedOn="{StaticResource {x:Type FrameworkElement}}">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type FrameworkElement}}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="xctk:IntegerUpDown" BasedOn="{StaticResource {x:Type FrameworkElement}}">
            <Setter Property="Focusable" Value="True"/>
        </Style>
        <Style x:Key="StatusTitleText" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Grid.HorizontalAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="Container" TargetType="Border">
            <Setter Property="Background" Value="#011627" />
            <Setter Property="BorderBrush" Value="#FF9F1C" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Padding" Value="4" />
        </Style>
        <Style x:Key="StatusTitleBackground" TargetType="Border" BasedOn="{StaticResource Container}">
            <Setter Property="BorderThickness" Value="2,2,2,0" />
        </Style>

        <Style x:Key="RightUsedPillz" TargetType="xctk:IntegerUpDown" BasedOn="{StaticResource {x:Type xctk:IntegerUpDown}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RightSelectedCard}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="LeftUsedPillz" TargetType="xctk:IntegerUpDown" BasedOn="{StaticResource {x:Type xctk:IntegerUpDown}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding LeftSelectedCard}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RightUsedFury" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RightSelectedCard}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="LeftUsedFury" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding LeftSelectedCard}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
            
        <Style x:Key="CardR0" TargetType="usercontrol:CardDrawedView">
            <Setter Property="CardDrawed" Value="{Binding Combat.RightPlayerStatus.Hand[0]}"/>
            <Setter Property="HasBattled" Value="{Binding Combat.RightPlayerStatus.Hand.Status.HasCardBeingPlayed[0]}"/>
            <Setter Property="HasWon" Value="{Binding Combat.RightPlayerStatus.Hand.Status.HasWonPerCard[0]}"/>
            <Setter Property="UsedPillz" Value="{Binding Combat.RightPlayerStatus.Hand.Status.UsedPillzPerCard[0]}"/>
            <Setter Property="HasUsedFury" Value="{Binding Combat.RightPlayerStatus.Hand.Status.UsedFuryPerCard[0]}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RightSelectedCard}" Value="0">
                    <Setter Property="IsSelected" Value="true"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CardR1" TargetType="usercontrol:CardDrawedView">
            <Setter Property="CardDrawed" Value="{Binding Combat.RightPlayerStatus.Hand[1]}"/>
            <Setter Property="HasBattled" Value="{Binding Combat.RightPlayerStatus.Hand.Status.HasCardBeingPlayed[1]}"/>
            <Setter Property="HasWon" Value="{Binding Combat.RightPlayerStatus.Hand.Status.HasWonPerCard[1]}"/>
            <Setter Property="UsedPillz" Value="{Binding Combat.RightPlayerStatus.Hand.Status.UsedPillzPerCard[1]}"/>
            <Setter Property="HasUsedFury" Value="{Binding Combat.RightPlayerStatus.Hand.Status.UsedFuryPerCard[1]}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RightSelectedCard}" Value="1">
                    <Setter Property="IsSelected" Value="true"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CardR2" TargetType="usercontrol:CardDrawedView">
            <Setter Property="CardDrawed" Value="{Binding Combat.RightPlayerStatus.Hand[2]}"/>
            <Setter Property="HasBattled" Value="{Binding Combat.RightPlayerStatus.Hand.Status.HasCardBeingPlayed[2]}"/>
            <Setter Property="HasWon" Value="{Binding Combat.RightPlayerStatus.Hand.Status.HasWonPerCard[2]}"/>
            <Setter Property="UsedPillz" Value="{Binding Combat.RightPlayerStatus.Hand.Status.UsedPillzPerCard[2]}"/>
            <Setter Property="HasUsedFury" Value="{Binding Combat.RightPlayerStatus.Hand.Status.UsedFuryPerCard[2]}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RightSelectedCard}" Value="2">
                    <Setter Property="IsSelected" Value="true"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CardR3" TargetType="usercontrol:CardDrawedView">
            <Setter Property="CardDrawed" Value="{Binding Combat.RightPlayerStatus.Hand[3]}"/>
            <Setter Property="HasBattled" Value="{Binding Combat.RightPlayerStatus.Hand.Status.HasCardBeingPlayed[3]}"/>
            <Setter Property="HasWon" Value="{Binding Combat.RightPlayerStatus.Hand.Status.HasWonPerCard[3]}"/>
            <Setter Property="UsedPillz" Value="{Binding Combat.RightPlayerStatus.Hand.Status.UsedPillzPerCard[3]}"/>
            <Setter Property="HasUsedFury" Value="{Binding Combat.RightPlayerStatus.Hand.Status.UsedFuryPerCard[3]}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RightSelectedCard}" Value="3">
                    <Setter Property="IsSelected" Value="true"/>
                </DataTrigger>
            </Style.Triggers>
            </Style>

        <Style x:Key="CardL0" TargetType="usercontrol:CardDrawedView">
            <Setter Property="CardDrawed" Value="{Binding Combat.LeftPlayerStatus.Hand[0]}"/>
            <Setter Property="HasBattled" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.HasCardBeingPlayed[0]}"/>
            <Setter Property="HasWon" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.HasWonPerCard[0]}"/>
            <Setter Property="UsedPillz" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.UsedPillzPerCard[0]}"/>
            <Setter Property="HasUsedFury" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.UsedFuryPerCard[0]}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding LeftSelectedCard}" Value="0">
                    <Setter Property="IsSelected" Value="true"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CardL1" TargetType="usercontrol:CardDrawedView">
            <Setter Property="CardDrawed" Value="{Binding Combat.LeftPlayerStatus.Hand[1]}"/>
            <Setter Property="HasBattled" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.HasCardBeingPlayed[1]}"/>
            <Setter Property="HasWon" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.HasWonPerCard[1]}"/>
            <Setter Property="UsedPillz" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.UsedPillzPerCard[1]}"/>
            <Setter Property="HasUsedFury" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.UsedFuryPerCard[1]}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding LeftSelectedCard}" Value="1">
                    <Setter Property="IsSelected" Value="true"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CardL2" TargetType="usercontrol:CardDrawedView">
            <Setter Property="CardDrawed" Value="{Binding Combat.LeftPlayerStatus.Hand[2]}"/>
            <Setter Property="HasBattled" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.HasCardBeingPlayed[2]}"/>
            <Setter Property="HasWon" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.HasWonPerCard[2]}"/>
            <Setter Property="UsedPillz" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.UsedPillzPerCard[2]}"/>
            <Setter Property="HasUsedFury" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.UsedFuryPerCard[2]}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding LeftSelectedCard}" Value="2">
                    <Setter Property="IsSelected" Value="true"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CardL3" TargetType="usercontrol:CardDrawedView">
            <Setter Property="CardDrawed" Value="{Binding Combat.LeftPlayerStatus.Hand[3]}"/>
                <Setter Property="HasBattled" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.HasCardBeingPlayed[3]}"/>
                <Setter Property="HasWon" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.HasWonPerCard[3]}"/>
                <Setter Property="UsedPillz" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.UsedPillzPerCard[3]}"/>
                <Setter Property="HasUsedFury" Value="{Binding Combat.LeftPlayerStatus.Hand.Status.UsedFuryPerCard[3]}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding LeftSelectedCard}" Value="3">
                        <Setter Property="IsSelected" Value="true"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Command="{Binding SelectCard}" CommandParameter="R0" Key="Q"/>
        <KeyBinding Command="{Binding SelectCard}" CommandParameter="R1" Key="W"/>
        <KeyBinding Command="{Binding SelectCard}" CommandParameter="R2" Key="E"/>
        <KeyBinding Command="{Binding SelectCard}" CommandParameter="R3" Key="R"/>
        
        <KeyBinding Command="{Binding SelectCard}" CommandParameter="L0" Key="A"/>
        <KeyBinding Command="{Binding SelectCard}" CommandParameter="L1" Key="S"/>
        <KeyBinding Command="{Binding SelectCard}" CommandParameter="L2" Key="D"/>
        <KeyBinding Command="{Binding SelectCard}" CommandParameter="L3" Key="F"/>

        <KeyBinding Command="{Binding PlayRound}" Key="Space" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding RewindRound}" Key="Backspace" Modifiers="Ctrl" />
        <!--<KeyBinding Command="{Binding NewCombat}" Key="Esc" Modifiers="Ctrl" />-->
    </Window.InputBindings>

    <Grid>
        <!-- External Border -->
        <Border Style="{StaticResource WindowBorder}" />       
        
        <!-- Content -->
        <Grid Name="GlobalGrid">
                            
             <!--Big Area Definition--> 
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Column1Width, ElementName=Window, Mode=TwoWay}" />
                <ColumnDefinition Width="{StaticResource GridSplitterSize}" />
                <ColumnDefinition Width="{Binding Column2Width, ElementName=Window, Mode=TwoWay}" />
                <ColumnDefinition Width="{StaticResource GridSplitterSize}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding Row1Height, ElementName=Window, Mode=TwoWay}" />
                <RowDefinition Height="{StaticResource GridSplitterSize}" />
                <RowDefinition Height="{Binding Row2Height, ElementName=Window, Mode=TwoWay}" />
                <RowDefinition Height="{StaticResource GridSplitterSize}" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <!--END Big Area Definition-->
            
            <!--Phantom control-->
            <TextBox x:Name="PhantomControl" Height="1" Width="1"/>

            <!--Left Column-->
            <Rectangle Style="{StaticResource GlobalBackground}" Grid.Column="0" Grid.RowSpan="5" />
            <!--Right Column-->
            <Rectangle Style="{StaticResource GlobalBackground}" Grid.Column="4" Grid.RowSpan="5" />
            <!--Top Row-->
            <Rectangle Style="{StaticResource GlobalBackground}" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="5" />
            <!--Bottom Row-->
            <Rectangle Style="{StaticResource GlobalBackground}" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="5" />
            <!--Left Center-->
            <Rectangle Style="{StaticResource GlobalBackground}" Grid.Column="0" Grid.Row="1" Grid.RowSpan="3" />
            <!--Right Center-->
            <Rectangle Style="{StaticResource GlobalBackground}" Grid.Column="4" Grid.Row="1" Grid.RowSpan="3" />
            <!--Top Center-->
            <Rectangle Style="{StaticResource GlobalBackground}" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="3" />
            <!--Bottom Center-->
            <Rectangle Style="{StaticResource GlobalBackground}" Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="3" />

            <!--Center-->
            <Border Style="{StaticResource HoleBorder}" Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1" Grid.RowSpan="3" />
            <!--Top-->
            <GridSplitter Style="{StaticResource GridSplitter}" Grid.Column="2" Grid.Row="1" />
            <!--Left-->
            <GridSplitter Style="{StaticResource GridSplitter}" Grid.Column="1" Grid.Row="2" />
            <!--Right-->
            <GridSplitter Style="{StaticResource GridSplitter}" Grid.Column="3" Grid.Row="2" />
            <!--Bottom-->
            <GridSplitter Style="{StaticResource GridSplitter}" Grid.Column="2" Grid.Row="3" />
                
            <!--Left Panel-->
            <Grid Grid.RowSpan="5" Margin="0 50" HorizontalAlignment="Center" >
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" VerticalAlignment="Top">
                    <Border Style="{StaticResource StatusTitleBackground}">
                        <Label Style="{StaticResource StatusTitleText}">Enemy Status</Label>
                    </Border>
                    <usercontrol:PlayerStatusView 
                        PlayerStatus="{Binding Combat.RightPlayerStatus}" 
                        FocusManager.GotFocus="PlayerStatus_GotFocus"/>
                </StackPanel>

                <StackPanel Grid.Row="1" VerticalAlignment="Center">
                    <Border  Style="{StaticResource Container}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Label Grid.Column="0" Grid.Row="0">Enemy used pillz:</Label>
                            <Label Grid.Column="0" Grid.Row="1">Your used pillz:</Label>
                            <xctk:IntegerUpDown x:Name="RightPillz" Grid.Column="1" Grid.Row="0" Style="{StaticResource RightUsedPillz}" Value="{Binding RightUsedPillz}" IsEnabledChanged="UsedPillzEnabled"/>
                            <xctk:IntegerUpDown x:Name="LeftPillz" Grid.Column="1" Grid.Row="1" Style="{StaticResource LeftUsedPillz}" Value="{Binding LeftUsedPillz}" IsEnabledChanged="UsedPillzEnabled"/>
                            <CheckBox x:Name="RightFury" Grid.Column="2" Grid.Row="0" Style="{StaticResource RightUsedFury}" IsChecked="{Binding RightUsedFury}">Fury</CheckBox>
                            <CheckBox x:Name="LeftFury" Grid.Column="2" Grid.Row="1" Style="{StaticResource LeftUsedFury}" IsChecked="{Binding LeftUsedFury}">Fury</CheckBox>
                            <Grid Grid.Row="2" Grid.ColumnSpan="3" Margin="4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Button Grid.Column="0" Command="{Binding RewindRound}">Rewind Round</Button>
                                <Button Grid.Column="1" Command="{Binding PlayRound}">Play Round</Button>
                                <Button Grid.Row="1" Grid.ColumnSpan="2" Content="{x:Static resx:UIStrings.ui_calculator_new_combat}" Click="CreateNewCombat_Click" VerticalAlignment="Bottom" />
                            </Grid>
                        </Grid>
                    </Border>
                </StackPanel>

                <StackPanel Grid.Row="2" VerticalAlignment="Bottom">
                    <Border Style="{StaticResource StatusTitleBackground}">
                        <Label Style="{StaticResource StatusTitleText}">Your Status</Label>
                    </Border>
                    <usercontrol:PlayerStatusView 
                        PlayerStatus="{Binding Combat.LeftPlayerStatus}" 
                        FocusManager.GotFocus="PlayerStatus_GotFocus"/>

                </StackPanel>

                <StackPanel Grid.Row="3" Orientation="Vertical" Margin="0 20">
                    <StackPanel.Resources>
                        <Style TargetType="Image">
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                        </Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Orientation" Value="Horizontal"/>
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                        </Style>
                    </StackPanel.Resources>
                    <StackPanel>
                        <Image Source="/Resources/Keyboard/Q.png"/>
                        <Image Source="/Resources/Keyboard/W.png"/>
                        <Image Source="/Resources/Keyboard/E.png"/>
                        <Image Source="/Resources/Keyboard/R.png"/>
                    </StackPanel>
                    <StackPanel>
                        <Image Source="/Resources/Keyboard/A.png"/>
                        <Image Source="/Resources/Keyboard/S.png"/>
                        <Image Source="/Resources/Keyboard/D.png"/>
                        <Image Source="/Resources/Keyboard/F.png"/>
                    </StackPanel>
                    <StackPanel>
                        <Image Source="/Resources/Keyboard/Ctrl.png"/>
                        <Image Source="/Resources/Keyboard/Space.png"/>
                    </StackPanel>
                    <StackPanel>
                        <Image Source="/Resources/Keyboard/Ctrl.png"/>
                        <Image Source="/Resources/Keyboard/Backspace.png"/>
                    </StackPanel>
                </StackPanel>
                
           </Grid>
            <!--END Left Panel-->

            <!--Top Panel-->
            <Border Grid.Column="2" Grid.Row="0" Margin="20" BorderBrush="#E71D36" BorderThickness="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Style="{DynamicResource ClickWrapper}" Command="{Binding SelectCard}" CommandParameter="R0">
                        <usercontrol:CardDrawedView Style="{StaticResource CardR0}" />
                    </Button>
                    <Button Grid.Column="2" Style="{DynamicResource ClickWrapper}" Command="{Binding SelectCard}" CommandParameter="R1">
                        <usercontrol:CardDrawedView Style="{StaticResource CardR1}" />
                    </Button>
                    <Button Grid.Column="4" Style="{DynamicResource ClickWrapper}" Command="{Binding SelectCard}" CommandParameter="R2">
                        <usercontrol:CardDrawedView Style="{StaticResource CardR2}" />
                    </Button>
                    <Button Grid.Column="6" Style="{DynamicResource ClickWrapper}" Command="{Binding SelectCard}" CommandParameter="R3">
                        <usercontrol:CardDrawedView Style="{StaticResource CardR3}" />
                    </Button>
                </Grid>
            </Border>
            <!--END Top Panel-->
            
            <!--Bottom Panel-->
            <Border Grid.Column="2" Grid.Row="4" Margin="20" BorderBrush="#2EC4B6" BorderThickness="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Style="{DynamicResource ClickWrapper}" Command="{Binding SelectCard}" CommandParameter="L0">
                        <usercontrol:CardDrawedView Style="{StaticResource CardL0}" />
                    </Button>
                    <Button Grid.Column="2" Style="{DynamicResource ClickWrapper}" Command="{Binding SelectCard}" CommandParameter="L1">
                        <usercontrol:CardDrawedView Style="{StaticResource CardL1}" />
                    </Button>
                    <Button Grid.Column="4" Style="{DynamicResource ClickWrapper}" Command="{Binding SelectCard}" CommandParameter="L2">
                        <usercontrol:CardDrawedView Style="{StaticResource CardL2}" />
                    </Button>
                    <Button Grid.Column="6" Style="{DynamicResource ClickWrapper}" Command="{Binding SelectCard}" CommandParameter="L3">
                        <usercontrol:CardDrawedView Style="{StaticResource CardL3}" />
                    </Button>
                </Grid>
            </Border>

            
            <!--END Bottom Panel-->
            
            <!--Right Panel-->
            <StackPanel Grid.Column="5" Grid.Row="0" Grid.RowSpan="5" Margin="20">
                <Button VerticalAlignment="Center" HorizontalAlignment="Center" Click="StayOnTop_Click">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox VerticalAlignment="Center" IsHitTestVisible="False" IsChecked="{Binding StayOnTop, ElementName=Window}"/>
                        <Label>Top</Label>
                    </StackPanel>
                </Button>

                <ListView VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0 20 0 0" 
                          ItemsSource="{Binding InteractionResults}" 
                          ItemTemplate="{StaticResource RoundResultTemplate}" 
                          HorizontalContentAlignment="Stretch"
                          Background="Transparent" BorderThickness="0"/>
            </StackPanel>
            <!--END Right Panel-->

        </Grid>
        <!-- End Content-->

        <ccl:CaptionButtons DataContext="{Binding ElementName=Window}"/>
    </Grid>
</ccl:CustomChromeWindow>